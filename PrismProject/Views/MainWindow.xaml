<Window
    x:Class="PrismProject.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:PrismProject.Core;assembly=PrismProject.Core"
    xmlns:ext="clr-namespace:PrismProject.Extensions"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    Width="1024"
    Height="600"
    prism:ViewModelLocator.AutoWireViewModel="True"
    AllowsTransparency="True"
    Background="{DynamicResource MaterialDesign.Brush.Background}"
    FontFamily="微软雅黑"
    Style="{StaticResource MaterialDesignWindow}"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None">
    <!--
        FontFamily="微软雅黑"  // 设置字体样式
        xmlns:materialDesign  // 添加主题命名空间
        WindowStyle  // 去掉白色边框
        AllowsTransparency="True"  // 隐藏上方白边
        WindowStartupLocation  // 窗口居中
        Width="1280" Height="720"  // 窗口设置大一些
        Style="{StaticResource MaterialDesignWindow}"  // 主题样式, 使用主题库
        /* 下面都是主题库github的设置, 可以方便后期切换主题 */
        TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
        Background="{DynamicResource MaterialDesign.Brush.Background}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
    -->

    <Window.Template>
        <ControlTemplate TargetType="Window">
            <!--  创建带有圆角的边框  -->
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource MaterialDesignDivider}"
                BorderThickness="1"
                CornerRadius="15">
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
            </Border>
        </ControlTemplate>
    </Window.Template>

    <materialDesign:DialogHost
        x:Name="DialogHost"
        CloseOnClickAway="False"
        DialogTheme="Inherit"
        Identifier="MainWindowDialogHost">
        <materialDesign:DrawerHost
            x:Name="drawerHost"
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
            LeftDrawerCornerRadius="5">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <!--  设置侧边栏  -->
                <DockPanel MinWidth="220">
                    <StackPanel Margin="0,30,0,20" DockPanel.Dock="Top">
                        <Image
                            x:Name="AvatarImage2"
                            Width="60"
                            Height="60"
                            Margin="0,0,0,0"
                            Source="/Statics/Images/user.jpg">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="30,30"
                                    RadiusX="30"
                                    RadiusY="30" />
                            </Image.Clip>
                        </Image>
                        <TextBlock
                            x:Name="userName"
                            Margin="0,10,0,0"
                            HorizontalAlignment="Center" />
                    </StackPanel>
                    <ListBox
                        x:Name="menuBar"
                        ItemContainerStyle="{StaticResource MyListBoxItemStyle}"
                        ItemsSource="{Binding MenuBars}">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Padding="10" Background="Transparent">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <StackPanel Background="Transparent" Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="15,0,0,0" Kind="{Binding Icon}" />
                                        <TextBlock Margin="10,0,0,0" Text="{Binding Title}" />
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--  提示消息  -->
                <materialDesign:Snackbar
                    x:Name="snackbar"
                    Panel.ZIndex="1"
                    MessageQueue="{materialDesign:MessageQueue}" />

                <materialDesign:ColorZone
                    x:Name="ColorZone"
                    Padding="5"
                    materialDesign:ElevationAssist.Elevation="Dp4"
                    CornerRadius="10, 10, 0, 0"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel LastChildFill="False">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Command="{Binding MenuToggleButtonCommand}"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <!--<Button
                    Margin="24,0,0,0"
                    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                    Command="{Binding GoBackCommand}"
                    Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                      Size=24}"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                    Style="{StaticResource MaterialDesignToolButton}"
                    ToolTip="Previous Item" />-->

                            <!--<Button
                    Margin="16,0,0,0"
                    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                    Command="{Binding GoForwardCommand}"
                    Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                      Size=24}"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                    Style="{StaticResource MaterialDesignToolButton}"
                    ToolTip="Next Item" />-->

                            <TextBlock
                                Margin="16,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.Name="Material Design In XAML Toolkit"
                                FontSize="22"
                                Text="笔记本" />
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <!--  添加头像和按钮  -->
                            <materialDesign:PopupBox>
                                <materialDesign:PopupBox.ToggleContent>
                                    <Image
                                        x:Name="AvatarImage1"
                                        Width="40"
                                        Height="40"
                                        Margin="0,0,30,0"
                                        Source="/Statics/Images/user.jpg">
                                        <Image.Clip>
                                            <EllipseGeometry
                                                Center="20,20"
                                                RadiusX="20"
                                                RadiusY="20" />
                                        </Image.Clip>
                                    </Image>
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel>
                                    <Button Command="{Binding LoginOutCommand}" Content="退出登录" />
                                </StackPanel>
                            </materialDesign:PopupBox>

                            <Button x:Name="btnMin" Style="{StaticResource MaterialDesignFlatMidBgButton}">
                                <materialDesign:PackIcon
                                    MinWidth="25"
                                    MinHeight="25"
                                    Kind="minimize" />
                            </Button>
                            <Button x:Name="btnMax" Style="{StaticResource MaterialDesignFlatMidBgButton}">
                                <materialDesign:PackIcon
                                    MinWidth="20"
                                    MinHeight="20"
                                    Kind="maximize" />
                            </Button>
                            <Button x:Name="btnClose" Style="{StaticResource MaterialDesignFlatMidBgButton}">
                                <materialDesign:PackIcon
                                    MinWidth="25"
                                    MinHeight="25"
                                    Kind="close" />
                            </Button>
                        </StackPanel>
                    </DockPanel>
                </materialDesign:ColorZone>
                <ContentControl
                    x:Name="buttomContentControl"
                    Grid.Row="1"
                    prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}" />
            </Grid>

        </materialDesign:DrawerHost>

        <!--  弹窗  -->
        <materialDesign:DialogHost.DialogContent>
            <ContentControl x:Name="DialogContentControl" />
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>
</Window>
